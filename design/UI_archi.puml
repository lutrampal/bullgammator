@startuml

package IG {
	class MainVue {
		series
		drum
	}

	class WirePannel {
	}
	MainVue *-- WirePannel

	class Editors {
	}
	MainVue *-- Editors

	class HexEditor {
		@Input series3
		@Input drum
		@Output series3 = null
		@Output drum = null
		editDrum(hexCode)
		editSeries3(hexCode)
	}
	Editors *-- HexEditor

	class CodeLibrary {
		@Output series3
		@Output drum
		getProgramsNames()
		loadProgram(name)
	}
	MainVue *--- CodeLibrary

	class Control {
		breakpoints
	}
	MainVue *-- Control

	class Memories {
		edit(hexCode)
	}
	Control *-- Memories

	class Octads {
		edit(hexCode)
		selectOctad(octadId)
	}
	Control *-- Octads

	class Series {
		@Output breakpoints
		setBreakPoint(line)
		selectSeries(seriesId)
	}
	Control *-- Series

	class Exec {
		@Input breakpoints
		executeNextInstruction()
		execUntilBreakPoint()
	}
	Control *-- Exec

	class Drum {
		getBlock(groupId, trackId, blockId)
	}
	MainVue *--- Drum
}

package Interface_IG-Model {
	class EditorService {
		bull: BullgammatorService
		editDrum(hexCode)
		editSeries3(hexCode)
	}
	HexEditor o-- EditorService

	class CodeLibService {
		getProgramsNames()
		loadProgram(name)
	}
	CodeLibrary o-- CodeLibService

	class MemoriesService {
		set()
		get()
	}
	Octads o-- MemoriesService
	Memories o-- MemoriesService

	class SeriesService {
		getInstructions(series)
	}
	Series o-- SeriesService

	class ExecService {
		getInstructions(series)
	}
	Exec o-- ExecService

	class DrumService {
		getBlock(groupId, trackId, blockId)
	}
	Drum o-- DrumService
}

package Model {
  class Editor {
  }
	EditorService *-- Editor
  Editor o-- BullGamma

  class Execution {
  }
	ExecService *-- Execution
	SeriesService *-- Execution
  Execution o-- BullGamma

  class Debug {
  }
	MemoriesService *-- Debug
  DrumService o-- BullGamma
  Debug o-- BullGamma
}

@enduml
